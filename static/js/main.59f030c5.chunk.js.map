{"version":3,"sources":["api.js","components/routes/Login.js","components/routes/Register.js","components/routes/Home.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","qs","BASE_URL","api","register","_x","_x2","_register","apply","this","arguments","login","_x3","_x4","_login","by_id","_x7","_x8","_by_id","by_name","_x5","_x6","_by_name","_callee","username","password","param","response","data","regenerator_default","a","wrap","_context","prev","next","post_request","concat","sent","code","status","stop","_callee2","_context2","abrupt","token","_callee3","auth_token","query","page","count","_args3","_context3","length","undefined","name","get_request","Auth-Token","payload","_callee4","_args4","_context4","_callee5","url","params","headers","options","_context5","stringify","Object","objectSpread","Content-Type","post","_callee6","_context6","console","log","get","Login","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","user_id","snackbar_open","snackbar_text","_this2","react_default","createElement","Grid","container","direction","alignItems","justify","style","minHeight","backgroundColor","item","xs","align","Card","className","maxWidth","CardContent","padding","Typography","variant","onSubmit","e","TextField","id","label","margin","fullWidth","value","onChange","evt","update_value","type","Button","color","marginTop","width","react_router_dom","to","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","setState","message","_this3","then","show_snackbar","Cookies","set","path","history","push","catch","toString","preventDefault","key","p","target","text","React","Component","Register","submit_registration","cookie","Home","find_by","label_width","dropdown_open","dropdown_anchor","dropdown_label","records","active_query","loading","AppBar","position","elevation","Container","do_search","Paper","display","marginLeft","aria-controls","aria-haspopup","onClick","open_search_selector","ArrowDropDown_default","Menu","anchorEl","keepMounted","transformOrigin","close_search_selector","MenuItem","pick_search_selector","Divider","height","InputBase","placeholder","inputProps","aria-label","flex","IconButton","Search_default","flexGrow","logout","LinearProgress","Table","TableHead","TableRow","TableCell","TableBody","map","row","i","nim_tpb","component","scope","nim_jur","prodi","disabled","prev_page","NavigateBefore_default","next_page","NavigateNext_default","selector","currentTarget","load_results","results","Math","max","App","react_router","exact","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59f030c5.chunk.js","sourcesContent":["const axios = require('axios');\nconst qs = require('qs');\nconst BASE_URL = \"https://api.stya.net\";\n\nexport default {\n    register,\n    login,\n    by_id,\n    by_name\n};\n\n/**\n * Register new user\n * @param username username\n * @param password password\n */\nexport async function register(username, password) {\n    let param = {\n        username: username,\n        password: password\n    };\n\n    let response = await post_request(`${BASE_URL}/nim/register`, param);\n    let data = response.data;\n\n    if(data.code !== 0) throw data.status;\n}\n\n/**\n * Login\n * @param username\n * @param password\n * @returns Promise<String> token\n */\nexport async function login(username, password) {\n    let param = {\n        username: username,\n        password: password\n    };\n\n    let response = await post_request(`${BASE_URL}/nim/login`, param);\n    let data = response.data;\n\n    if(data.code !== 0) throw data.status;\n    else return data.token;\n}\n\nexport async function by_name(auth_token, query, page = 0, count = 10) {\n    let param = {\n        name: query,\n        page: page,\n        count: count\n    };\n\n    let response = await get_request(`${BASE_URL}/nim/byname`, param, {\n        'Auth-Token': auth_token\n    });\n\n    let data = response.data;\n\n    if(data.status !== 'OK') throw data.status;\n    else return data.payload;\n}\n\nexport async function by_id(auth_token, query, page = 0, count = 10) {\n    let param = {\n        query: query,\n        page: page,\n        count: count\n    };\n\n    let response = await get_request(`${BASE_URL}/nim/byid`, param, {\n        'Auth-Token': auth_token\n    });\n\n    let data = response.data;\n\n    if(data.status !== 'OK') throw data.status;\n    else return data.payload;\n}\n\nasync function post_request(url, params, headers) {\n    let payload = qs.stringify(params);\n\n    let options = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...headers\n        }\n    };\n\n    return await axios.post(url, payload, options);\n}\n\nasync function get_request(url, params, headers) {\n    let payload = qs.stringify(params);\n\n    let options = {\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            ...headers\n        }\n    };\n\n    console.log(options);\n\n    return await axios.get(url + \"?\" + payload, options);\n}","/**\n * Login route\n * This page functions as a login page for user\n *\n * @author Muhammad Aditya Hilmy, NIM 18217025\n */\n\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport api from \"../../api\";\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_id: '',\n            snackbar_open: false,\n            snackbar_text: '',\n            username: '',\n            password: ''\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '100vh', backgroundColor: '#c2185b' }}>\n                    <Grid item xs={12} align=\"center\">\n                        <Card className='login_card' style={{maxWidth: '400px'}}>\n                            <CardContent align=\"left\" style={{padding: '32px'}}>\n                                <Typography variant=\"h5\">Sign in</Typography>\n                                <p>Hi there, welcome to <s>Lamia</s> NIM finder! Please login or register to continue.</p>\n                                <form onSubmit={(e) => this.login(e)}>\n                                    <TextField\n                                        id=\"outlined-name\"\n                                        label=\"Username\"\n                                        className='textfield'\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        value={this.state.username}\n                                        onChange={evt => this.update_value('username', evt)}\n                                    />\n                                    <TextField\n                                        id=\"outlined-name\"\n                                        label=\"Password\"\n                                        className='textfield'\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        type=\"password\"\n                                        value={this.state.password}\n                                        onChange={evt => this.update_value('password', evt)}\n                                    />\n                                    <Button variant=\"outlined\" color=\"primary\" style={{marginTop: '16px', width: '100%'}} type='submit'>\n                                        Sign in\n                                    </Button>\n                                    <div style={{marginTop: '16px'}}>Or <NavLink to=\"/register\">register</NavLink> if you haven't</div>\n                                </form>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.snackbar_open}\n                    autoHideDuration={6000}\n                    onClose={() => this.setState({snackbar_open: false})}\n                    message={<div>{this.state.snackbar_text}</div>}\n                />\n            </div>\n        );\n    }\n\n    login(e) {\n        api.login(this.state.username, this.state.password).then((token) => {\n            this.show_snackbar(\"Logged in!\");\n            const cookies = new Cookies();\n            cookies.set('token', token, { path: '/' });\n            this.props.history.push('/');\n        }).catch((e) => {\n            console.log(\"Error: \" + e.toString());\n            this.show_snackbar(e.toString());\n        });\n        e.preventDefault();\n    }\n\n    update_value(key, evt) {\n        let p = {};\n        p[key] = evt.target.value;\n        this.setState(p);\n    }\n\n    show_snackbar(text) {\n        this.setState({\n            snackbar_open: true,\n            snackbar_text: text,\n        });\n    }\n};","/**\n * Register route\n * This page functions as a login page for user\n *\n * @author Muhammad Aditya Hilmy, NIM 18217025\n */\n\nimport React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport TextField from '@material-ui/core/TextField';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport api from \"../../api\";\n\nexport default class Register extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_id: '',\n            snackbar_open: false,\n            snackbar_text: '',\n            username: '',\n            password: ''\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" style={{ minHeight: '100vh', backgroundColor: '#c2185b' }}>\n                    <Grid item xs={12} align=\"center\">\n                        <Card className='login_card' style={{maxWidth: '400px'}}>\n                            <CardContent align=\"left\" style={{padding: '32px'}}>\n                                <Typography variant=\"h5\">Register</Typography>\n                                <p>Create an account to use <s>Lamia</s> NIM finder</p>\n                                <form onSubmit={(e) => this.submit_registration(e)}>\n                                    <TextField\n                                        id=\"outlined-name\"\n                                        label=\"Username\"\n                                        className='textfield'\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        value={this.state.username}\n                                        onChange={evt => this.update_value('username', evt)}\n                                        fullWidth />\n                                    <TextField\n                                        id=\"outlined-name\"\n                                        label=\"Password\"\n                                        className='textfield'\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                        fullWidth\n                                        value={this.state.password}\n                                        onChange={evt => this.update_value('password', evt)}\n                                        type=\"password\" />\n                                    <Button variant=\"outlined\" color=\"primary\" style={{marginTop: '16px', width: '100%'}} type='submit'>\n                                        Register\n                                    </Button>\n                                    <div style={{marginTop: '16px'}}>Or <NavLink to=\"/login\">sign in</NavLink> if you have an account.</div>\n                                </form>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                </Grid>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n                    open={this.state.snackbar_open}\n                    autoHideDuration={6000}\n                    onClose={() => this.setState({snackbar_open: false})}\n                    message={<div>{this.state.snackbar_text}</div>}\n                />\n            </div>\n        );\n    }\n\n    submit_registration(e) {\n        api.register(this.state.username, this.state.password).then(() => {\n            console.log(\"User registered!\");\n            this.show_snackbar(\"You're registered now!\");\n            this.setState({\n                username: '',\n                password: ''\n            });\n        }).catch((e) => {\n            console.log(\"Error: \" + e.toString());\n            this.show_snackbar(e.toString());\n        });\n        e.preventDefault();\n    }\n\n    update_value(key, evt) {\n        let p = {};\n        p[key] = evt.target.value;\n        this.setState(p);\n    }\n\n    show_snackbar(text) {\n        this.setState({\n            snackbar_open: true,\n            snackbar_text: text,\n        });\n    }\n};","/**\n * Home route\n * This page is the home page\n *\n * @author Muhammad Aditya Hilmy, NIM 18217025\n */\n\nimport React from 'react';\nimport Cookies from 'universal-cookie';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Container from '@material-ui/core/Container';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport api from '../../api';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\n\nconst cookie = new Cookies();\nconst PER_PAGE = 15;\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            find_by: 'name',\n            label_width: 50,\n            dropdown_open: false,\n            dropdown_anchor: null,\n            dropdown_label: 'Nama',\n            page: 0,\n            records: [],\n            query: '',\n            active_query: '',\n            loading: false\n        }\n    }\n\n    componentDidMount() {\n        let token = cookie.get(\"token\");\n        if(!token) {\n            this.props.history.push('/login')\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <AppBar position=\"static\" style={{alignItems: 'left'}} elevation={0}>\n                    <div style={{padding: 6}}>\n                        <Container style={{padding: 0}} maxWidth=\"md\">\n                            <Grid container alignItems=\"center\">\n                                <Grid item>\n                                    <form onSubmit={(e) => this.do_search(e)}>\n                                        <Paper style={{\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            width: 400,\n                                            marginLeft: '24px'\n                                        }}>\n                                            <div>\n                                                <Button\n                                                    aria-controls=\"menu-appbar\"\n                                                    aria-haspopup=\"true\"\n                                                    onClick={(e) => this.open_search_selector(e)}\n                                                    color=\"inherit\"\n                                                    style={{marginLeft: 8}}>\n                                                    {this.state.dropdown_label}\n                                                    <ArrowDropDown />\n                                                </Button>\n                                                <Menu\n                                                    id=\"menu-appbar\"\n                                                    anchorEl={this.state.dropdown_anchor}\n                                                    anchorOrigin={{\n                                                        vertical: 'top',\n                                                        horizontal: 'right',\n                                                    }}\n                                                    keepMounted\n                                                    transformOrigin={{\n                                                        vertical: 'top',\n                                                        horizontal: 'right',\n                                                    }}\n                                                    open={this.state.dropdown_open}\n                                                    onClose={() => this.close_search_selector()}\n                                                >\n                                                    <MenuItem onClick={() => this.pick_search_selector('name', 'Nama')}>Nama</MenuItem>\n                                                    <MenuItem onClick={() => this.pick_search_selector('nim', 'NIM')}>NIM</MenuItem>\n                                                </Menu>\n                                            </div>\n                                            <Divider style={{\n                                                width: 1,\n                                                height: 28,\n                                                margin: 4,\n                                            }} />\n                                            <InputBase\n                                                placeholder=\"Cari mahasiswa\"\n                                                inputProps={{ 'aria-label': 'Search student' }}\n                                                style={{marginLeft: 8, flex: 1}}\n                                                value={this.state.query}\n                                                onChange={e => this.setState({ query: e.target.value })}\n                                            />\n                                            <IconButton aria-label=\"Search\" type='submit'>\n                                                <SearchIcon />\n                                            </IconButton>\n                                            <Divider />\n                                        </Paper>\n                                    </form>\n                                </Grid>\n                                <Grid style={{flexGrow: 1}}></Grid>\n                                <Grid item>\n                                    <Button style={{color: 'white'}} onClick={() => this.logout()}>Logout</Button>\n                                </Grid>\n                            </Grid>\n\n                        </Container>\n                    </div>\n                </AppBar>\n                <Container style={{padding: 24}} maxWidth=\"md\">\n                    <Paper style={{backgroundColor: 'white'}}>\n                        {this.state.loading && <LinearProgress />}\n                        {!this.state.loading && <div style={{height: 4}}></div>}\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>#</TableCell>\n                                    <TableCell>Nama</TableCell>\n                                    <TableCell>NIM TPB</TableCell>\n                                    <TableCell>NIM</TableCell>\n                                    <TableCell>Program Studi</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.records.map((row, i) => (\n                                    <TableRow key={row.nim_tpb}>\n                                        <TableCell style={{color: '#aaaaaa'}}>{(this.state.page * PER_PAGE) + (i + 1)}.</TableCell>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {row.name}\n                                        </TableCell>\n                                        <TableCell>{row.nim_tpb}</TableCell>\n                                        <TableCell>{row.nim_jur}</TableCell>\n                                        <TableCell>{row.prodi}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                        <IconButton\n                            disabled={this.state.page === 0}\n                            onClick={(e) => this.prev_page(e)}\n                            color=\"primary\"\n                            component=\"span\">\n                            <NavigateBeforeIcon />\n                        </IconButton>\n                        <small>{this.state.page + 1}</small>\n                        <IconButton\n                            disabled={this.state.records.length < PER_PAGE}\n                            onClick={(e) => this.next_page(e)}\n                            color=\"primary\"\n                            component=\"span\">\n                            <NavigateNextIcon />\n                        </IconButton>\n                    </Paper>\n                </Container>\n            </div>\n        );\n    }\n\n    pick_search_selector(selector, label) {\n        this.setState({\n            find_by: selector,\n            dropdown_label: label\n        });\n\n        this.close_search_selector();\n    }\n\n    open_search_selector(e) {\n        this.setState({\n            dropdown_anchor: e.currentTarget,\n            dropdown_open: true\n        });\n    }\n\n    close_search_selector() {\n        this.setState({\n            dropdown_anchor: null,\n            dropdown_open: false\n        });\n    }\n\n    do_search(e) {\n        e.preventDefault();\n        if(!this.state.query) return;\n\n        this.load_results(0, this.state.query);\n    }\n\n    load_results(page, query) {\n        let token = cookie.get(\"token\");\n\n        this.setState({\n            loading: true\n        });\n\n        if(this.state.find_by === 'name') {\n            api.by_name(token, query, page, PER_PAGE).then((results) => {\n                console.log(results);\n                this.setState({\n                    records: results,\n                    loading: false,\n                    page: page,\n                    active_query: query\n                });\n            }).catch((e) => {\n                console.log(e);\n                this.setState({\n                    loading: false\n                });\n            });\n        } else {\n            api.by_id(token, query, page, PER_PAGE).then((results) => {\n                console.log(results);\n                this.setState({\n                    records: results,\n                    loading: false,\n                    page: page,\n                    active_query: query\n                });\n            }).catch((e) => {\n                console.log(e);\n                this.setState({\n                    loading: false\n                });\n            });\n        }\n    }\n\n    next_page(e) {\n        e.preventDefault();\n        if(!this.state.active_query) return;\n\n        let page = this.state.page + 1;\n\n        this.load_results(page, this.state.active_query);\n    }\n\n    prev_page(e) {\n        e.preventDefault();\n        if(!this.state.active_query) return;\n        let page = Math.max(0, this.state.page - 1);\n\n        this.load_results(page, this.state.active_query)\n    }\n\n    logout() {\n        cookie.set(\"token\", '');\n        this.props.history.push('/login');\n    }\n}\n\nexport default Home;","import React from 'react';\nimport './App.css';\nimport {Route, BrowserRouter} from \"react-router-dom\";\nimport Login from './components/routes/Login';\nimport Register from './components/routes/Register';\nimport Home from './components/routes/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/\" component={Home}/>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}